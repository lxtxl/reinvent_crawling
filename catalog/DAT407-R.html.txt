다중 테넌트 아키텍처는 모든 세입자에게 데이터 저장 리소스를 공유하여 민첩성과 확장 성을 제공합니다.이러한 환경에서, 세입자 데이터를 분리하는 것은 응용 프로그램 빌더에게는 기본입니다.통합 세입자로부터 얻은 민첩성을 유지하면서 효과적인 데이터 격리 모델을 구현하는 것이 중요합니다.이 워크숍에서 Amazon Aurora, Amazon Dynamodb 및 AWS DMS를 사용하여 임차인을위한 공유 데이터베이스와 중앙 집중식 격리 시행을 달성하는 방법을 알아보십시오.Zero-ETL을 사용하여 테넌트 데이터를 통합하고 Amazon Redshift 읽기 확장 성을 활용하는 방법을 알아보십시오.인프라를 코드로 사용하여 테넌트 격리, 분할, 데이터베이스 작업 및 테넌트 휴대 성을위한 모범 사례를 탐색하십시오.참여하려면 노트북을 가져와야합니다.